// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);

    RAM4K(in=in, load=load1, address[0..10]=address[3..13], address[11]=false, out=r1);
    RAM4K(in=in, load=load2, address[0..10]=address[3..13], address[11]=false, out=r2);
    RAM4K(in=in, load=load3, address[0..10]=address[3..13], address[11]=false, out=r3);
    RAM4K(in=in, load=load4, address[0..10]=address[3..13], address[11]=false, out=r4);
    RAM4K(in=in, load=load5, address[0..10]=address[3..13], address[11]=false, out=r5);
    RAM4K(in=in, load=load6, address[0..10]=address[3..13], address[11]=false, out=r6);
    RAM4K(in=in, load=load7, address[0..10]=address[3..13], address[11]=false, out=r7);
    RAM4K(in=in, load=load8, address[0..10]=address[3..13], address[11]=false, out=r8);

    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address[0..2], out=out);
}